{
  "openapi": "3.0.0",
  "info": {
    "title": "users-api",
    "description": "The API for the users of the app",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "API"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "returns all registered users",
        "operationId": "getusers",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "max number of records to return",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All the users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "uri",
                    "example": "{\"Personid\":1,\"LastName\":\"Chavez\",\"FirstName\":\"Andrea\",\"Email\":\"persona0@gmail.com\",\"Password\":\"password\",\"Age\":22,\"Zodiac\":\"Cancer\",\"Description\":\"Me gusta mucho bailar\",\"Genre\":\"F\"},..."
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceRegistrationInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successfully registered device"
          }
        }
      }
    },
    "/users/{PersonId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "PersonId",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Zone temperature",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemperatueZoneStatus"
                }
              }
            }
          }
        },
        "x-swagger-router-controller": "Environment"
      }
    }
  },
  "components": {
    "schemas": {
      "LightingSummary": {
        "type": "object",
        "properties": {
          "zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LightingZone"
            }
          },
          "zoneStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LightingZoneStatus"
            }
          }
        },
        "description": "ok"
      },
      "LightingZone": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "deviceId": {
            "type": "integer",
            "format": "int32"
          },
          "deviceType": {
            "type": "string",
            "enum": [
              "dimmer",
              "switch"
            ]
          },
          "zone": {
            "type": "string"
          }
        }
      },
      "LightingZoneStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "the status of the lighting zone."
      },
      "TemperatureSummary": {
        "type": "object",
        "properties": {
          "zones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemperatureZone"
            }
          },
          "zoneStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemperatueZoneStatus"
            }
          }
        },
        "description": "ok"
      },
      "TemperatureZone": {
        "required": [
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "the unique identifier for the zone",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "inputPosition": {
            "type": "integer",
            "format": "int32"
          },
          "outputPosition": {
            "type": "integer",
            "format": "int32"
          },
          "zone": {
            "type": "string"
          }
        },
        "description": "a single temperature zone"
      },
      "TemperatueZoneStatus": {
        "required": [
          "id",
          "timestamp",
          "value"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the unique identifier for the zone"
          },
          "name": {
            "type": "string",
            "description": "the name of the zone"
          },
          "value": {
            "type": "number",
            "description": "the temperature in the zone",
            "format": "double"
          },
          "units": {
            "type": "string",
            "description": "the temperature units",
            "default": "fahrenheit",
            "enum": [
              "celsius",
              "fahrenheit"
            ]
          },
          "timestamp": {
            "type": "string",
            "description": "the timestamp when the temperature was measured",
            "format": "date-time"
          }
        },
        "description": "status of a single zone"
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "example": "everything is ok"
          }
        }
      },
      "HeaterState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "userstate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lastUpdate": {
            "type": "string",
            "format": "date-time"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ForecastResponse": {
        "type": "object",
        "properties": {
          "city": {
            "$ref": "#/components/schemas/City"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Forecast"
            }
          }
        }
      },
      "Forecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "pressure": {
            "type": "number",
            "format": "double"
          },
          "humidity": {
            "type": "integer",
            "format": "int32"
          },
          "windSpeed": {
            "type": "number",
            "format": "double"
          },
          "clouds": {
            "type": "integer",
            "format": "int32"
          },
          "temperature": {
            "$ref": "#/components/schemas/ForecastTemperature"
          },
          "weather": {
            "$ref": "#/components/schemas/WeatherForecast"
          }
        }
      },
      "City": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lon": {
            "type": "number",
            "format": "double"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "ForecastTemperature": {
        "type": "object",
        "properties": {
          "low": {
            "type": "number",
            "format": "double"
          },
          "high": {
            "type": "number",
            "format": "double"
          },
          "morning": {
            "type": "number",
            "format": "double"
          },
          "day": {
            "type": "number",
            "format": "double"
          },
          "evening": {
            "type": "number",
            "format": "double"
          },
          "night": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "icon": {
            "type": "string"
          }
        }
      },
      "DeviceRegistrationInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "LastName": {
            "type": "string",
            "example": "Harrison"
          },
          "FirstName": {
            "type": "string",
            "example": "John"
          },
          "Email": {
            "type": "string",
            "example": "juan@espol.edu.ec"
          },
          "Password": {
            "type": "string",
            "format": "password",
            "example": "111111"
          },
          "Age": {
            "type": "number",
            "example": 22
          },
          "Zodiac": {
            "type": "string",
            "example": "Capricornio"
          },
          "Description": {
            "type": "string",
            "example": "lorem impsum"
          }
        }
      }
    }
  }
}